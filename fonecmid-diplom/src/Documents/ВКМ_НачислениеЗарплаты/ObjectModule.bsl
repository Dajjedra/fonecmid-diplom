#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СформироватьДвижения();
	
	РассчитатьОсновныеНачисления(); 
	
	РассчитатьОтпускные();
	
	РассчитатьУдержание(); 
	
	ВзаиморасчетыССотрудниками();
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения()

	Для Каждого Строка Из Начисления Цикл 
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ВидРасчета = Строка.ВидРасчета;
		Движение.Сторно = Ложь;
		Движение.ПериодДействияНачало = Строка.ДатаНачала;
		Движение.ПериодДействияКонец = КонецДня(Строка.ДатаОкончания);
		РазницаДней = ((НачалоДня(Строка.ДатаОкончания) - НачалоДня(Строка.ДатаНачала)) / (60 * 60 * 24));
		Движение.КалендарныхДней = РазницаДней;
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.Подразделение = Строка.Подразделение;
		Движение.ГрафикРаботы = Строка.ГрафикРаботы;
		Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Дата, -12));
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		
		ДвижениеУдержание = Движения.ВКМ_Удержания.Добавить();
		ДвижениеУдержание.ПериодРегистрации = Дата;
		ДвижениеУдержание.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		ДвижениеУдержание.Сторно = Ложь;
		ДвижениеУдержание.ПериодДействияНачало = Строка.ДатаНачала;
		ДвижениеУдержание.ПериодДействияКонец = КонецДня(Строка.ДатаОкончания);
		ДвижениеУдержание.Сотрудник = Строка.Сотрудник;
		ДвижениеУдержание.Подразделение = Строка.Подразделение;
		ДвижениеУдержание.БазовыйПериодНачало = Строка.ДатаНачала;
		ДвижениеУдержание.БазовыйПериодКонец = Строка.ДатаОкончания;
		 
		
		ДвижениеВзаиморасчеты = Движения.ВКМ_ВзаиморасчетыССотрудниками.ДобавитьПриход();
		ДвижениеВзаиморасчеты.Сотрудник = Строка.Сотрудник;
		ДвижениеВзаиморасчеты.Период = Дата;
		
		
	КонецЦикла;

	Движения.ВКМ_ОсновныеНачисления.Записать(); 
	Движения.ВКМ_Удержания.Записать();
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	
	
КонецПроцедуры 

Процедура РассчитатьОсновныеНачисления()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.Период КАК Период,
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник КАК Сотрудник,
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот КАК СуммаКОплатеОборот
		|ПОМЕСТИТЬ ВТ_СуммыОплаты
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&ДатаНачала, &ДатаКонец, Месяц, ) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(СУММА(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад), 0) КАК Оклад,
		|	ЕСТЬNULL(СУММА(ВТ_СуммыОплаты.СуммаКОплатеОборот), 0) КАК СуммаКОплатеОборот,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК План,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(ПериодДействия МЕЖДУ &ДатаНачала И &ДатаКонец) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, ) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммыОплаты КАК ВТ_СуммыОплаты
		|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник = ВТ_СуммыОплаты.Сотрудник
		|			И ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействия = ВТ_СуммыОплаты.Период
		|ГДЕ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета = &ВидРасчета
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаКонец", КонецМесяца(Дата));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.Зарплата = Выборка.Оклад * Выборка.Факт / Выборка.План + Выборка.СуммаКОплатеОборот; 
		Движение.НДФЛ = Движение.Зарплата * 13 / 100;

	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(,Истина);
	
КонецПроцедуры 

Процедура РассчитатьОтпускные()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ЗарплатаБаза, 0) КАК ЗарплатаБаза,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.СуммаПремииБаза, 0) КАК СуммаПремииБаза,
		|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК План,
		|	РАЗНОСТЬДАТ(ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияНачало, ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияКонец, ДЕНЬ) КАК ДнейОтпуска,
		|	СУММА(ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ЗарплатаБаза, 0) + ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.СуммаПремииБаза, 0)) КАК НачисленнаяСумма12Месяцев,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеБазовыйПериод КАК ЗначениеБазовыйПериод,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета КАК ВидРасчета
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Ссылка
		|					И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Ссылка
		|					И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|	И ВКМ_ОсновныеНачисления.ВидРасчета = &ВидРасчета
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОсновныеНачисления.НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ЗарплатаБаза, 0),
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.СуммаПремииБаза, 0),
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0),
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0),
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеБазовыйПериод,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник,
		|	РАЗНОСТЬДАТ(ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияНачало, ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияКонец, ДЕНЬ),
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Подразделение");
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			
			Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
			Движение.Зарплата = (Выборка.НачисленнаяСумма12Месяцев / Выборка.ЗначениеБазовыйПериод) * Выборка.ДнейОтпуска - Движение.НДФЛ;
			Движение.НДФЛ = Движение.Зарплата * 13 / 100; 

		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(,Истина);

КонецПроцедуры

Процедура РассчитатьУдержание()
	
	Запрос = Новый Запрос;
	Запрос.Текст =  
		 "ВЫБРАТЬ
		 |	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.ЗарплатаБаза КАК ЗарплатаБаза,
		 |	ОКР(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.ЗарплатаБаза * 13 / 100, 0) КАК НДФЛ,
		 |	ВКМ_Удержания.НомерСтроки КАК НомерСтроки
		 |ИЗ
		 |	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
		 |			Регистратор = &Регистратор) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
		 |		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки
		 |ГДЕ
		 |	ВКМ_Удержания.Регистратор = &Регистратор";
	
	Измерения = Новый Массив; 
	Измерения.Добавить("Сотрудник");
	Измерения.Добавить("Подразделение");

	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Измерения", Измерения); 
		
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		ЗаполнитьЗначенияСвойств(Движение,Выборка,,"НомерСтроки");
		
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать(,Истина);

КонецПроцедуры

Процедура ВзаиморасчетыССотрудниками()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ВзаиморасчетыССотрудниками.Сотрудник КАК Сотрудник,
		|	СУММА(ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.Зарплата, 0)) КАК Зарплата,
		|	СУММА(ЕСТЬNULL(ВКМ_Удержания.НДФЛ, 0)) КАК НДФЛ,
		|	ВКМ_ВзаиморасчетыССотрудниками.НомерСтроки
		|ИЗ
		|	РегистрНакопления.ВКМ_ВзаиморасчетыССотрудниками КАК ВКМ_ВзаиморасчетыССотрудниками
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор) КАК
		|			ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ПО ВКМ_ВзаиморасчетыССотрудниками.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|		ПО ВКМ_ВзаиморасчетыССотрудниками.НомерСтроки = ВКМ_Удержания.НомерСтроки
		|ГДЕ
		|	ВКМ_ВзаиморасчетыССотрудниками.Регистратор = &Регистратор
		|	И ВКМ_Удержания.Регистратор = &Регистратор
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ВзаиморасчетыССотрудниками.Сотрудник,
		|	ВКМ_ВзаиморасчетыССотрудниками.НомерСтроки";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками[Выборка.НомерСтроки - 1];
		Движение.Сумма = Выборка.Зарплата - Выборка.НДФЛ; 
		
	КонецЦикла;
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать(); 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
		
        КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
        КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
        КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.РеализацияТоваровУслуг);
        КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

Процедура ПриОпределенииНастроекПечати(НастройкиОбъекта) Экспорт	
	НастройкиОбъекта.ПриДобавленииКомандПечати = Истина;
КонецПроцедуры

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт оказанных услуг
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктОказанныхУслуг";
	КомандаПечати.Представление = НСтр("ru = 'Акт оказанных услуг'");
	КомандаПечати.Порядок = 5;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "АктОказанныхУслуг");
	Если ПечатнаяФорма <> Неопределено Тогда
		ПечатнаяФорма.ТабличныйДокумент = ПечатьАктаОказанныхУслуг(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Акт оказанных услуг'");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.РеализацияТоваровУслуг.ПФ_MXL_АктОказанныхУслуг";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьАктаОказанныхУслуг(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_АктОказанныхУслуг";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеализацияТоваровУслуг.ПФ_MXL_АктОказанныхУслуг");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Организация КАК Организация,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.Договор КАК Договор,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.Дата КАК Дата,
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.Услуги.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		Количество КАК Количество,
	|		Цена КАК Цена,
	|		Сумма КАК Сумма
	|	) КАК Услуги
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

	ДанныеДокументов = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеДокументов.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			// Все документы нужно выводить на разных страницах.
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
		ВывестиЗаголовокАктаВыполненныхУслуг(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиРеквизитыСторон(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиУслуги(ДанныеДокументов, ТабличныйДокумент, Макет); 
		
		ВывестиИтоговуюСумму(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиПодвал(ДанныеДокументов, ТабличныйДокумент, Макет);
	
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати комплектов документов.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
		
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;
	
КонецФункции 

Процедура ВывестиЗаголовокАктаВыполненныхУслуг(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	Заголовок = Макет.ПолучитьОбласть("Заголовок"); 
	
	ДанныеПечати = Новый Структура;
	
	ШаблонЗаголовка = "Акт оказанных услуг № %1 от %2";
	ТекстЗаголовка = СтрШаблон(ШаблонЗаголовка,
	ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер),
	Формат(ДанныеДокументов.Дата, "ДЛФ=DD"));
	ДанныеПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);
	
	Заголовок.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(Заголовок);
	
КонецПроцедуры

Процедура ВывестиРеквизитыСторон(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьРеквизитыСторон = Макет.ПолучитьОбласть("ШапкаРеквизиты");
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("Организация", ДанныеДокументов.Организация);
	ДанныеПечати.Вставить("Контрагент", ДанныеДокументов.Контрагент);
	ДанныеПечати.Вставить("Договор", ДанныеДокументов.Договор);
	
	ОбластьРеквизитыСторон.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьРеквизитыСторон);
	
КонецПроцедуры

Процедура ВывестиУслуги(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьШапкаТЧ = Макет.ПолучитьОбласть("ШапкаТЧ");
	ОбластьСтрокаТЧ = Макет.ПолучитьОбласть("СтрокаТЧ");
	
	ТабличныйДокумент.Вывести(ОбластьШапкаТЧ);
	
	ВыборкаУслуги = ДанныеДокументов.Услуги.Выбрать();
	Пока ВыборкаУслуги.Следующий() Цикл
		ОбластьСтрокаТЧ.Параметры.Заполнить(ВыборкаУслуги);
		ТабличныйДокумент.Вывести(ОбластьСтрокаТЧ);
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиИтоговуюСумму(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьИтоговаяСумма = Макет.ПолучитьОбласть("ИтоговаяСумма");

	ВыборкаУслуги = ДанныеДокументов.Услуги.Выгрузить();
	
	ОбластьИтоговаяСумма.Параметры.Заполнить(ВыборкаУслуги);
	ТЗИтогиСумма = ВыборкаУслуги.Итог("Сумма");
	ОбластьИтоговаяСумма.Параметры.СуммаУслугЧисло = ТЗИтогиСумма;		
	ОбластьИтоговаяСумма.Параметры.СуммаПрописью = ЧислоПрописью(ТЗИтогиСумма,,"рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 0");
	
	ТабличныйДокумент.Вывести(ОбластьИтоговаяСумма);

КонецПроцедуры

Процедура ВывестиПодвал(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
    ТабличныйДокумент.Вывести(ОбластьПодвал);

КонецПроцедуры // ВывестиПодвал()

#КонецОбласти

#КонецЕсли